{"version":3,"file":"static/js/823.9b3f48ff.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/account.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/index.ts","../../src/utils.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const state = this.get();\n        const outLen = len / 4;\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | DurableNonceTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | DurableNonceTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as\n        | BlockheightBasedTransactionConfirmationStrategy\n        | DurableNonceTransactionConfirmationStrategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n",null,null,null,null,null,"'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","number","n","isSafeInteger","bytes","lengths","includes","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","u32","self","crypto","arr","Uint32Array","byteLength","createView","DataView","rotr","padStart","toBytes","data","str","TextEncoder","utf8ToBytes","Hash","this","_cloneInto","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","SHA2","padOffset","isLE","pos","view","len","take","set","subarray","process","dataView","roundClean","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","state","get","outLen","digestInto","res","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","freeze","a","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","array","j","hexByte","byte","parseInt","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","msg","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sha256","toFailures","StructError","failure","failures","rest","path","join","isIterable","isObject","Symbol","iterator","print","JSON","stringify","shiftIterator","input","next","done","toFailure","context","struct","branch","type","refinement","run","options","coerce","ctx","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","error","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","buf","getPrototypeOf","hmac","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","forEach","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","Buffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toJSON","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","concat","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","alloc","getAlloc","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","status","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","code","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","race","outcome","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","_signatureStatus","commitmentForStatus","timeoutMs","timeoutId","TIMED_OUT","clearTimeout","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","module","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","end","mul","move","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","base64","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","trim","target","thisStart","thisEnd","thisCopy","targetCopy","_arr","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","sym","getMessage","Base","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_inherits","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","_createClass","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_context4","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","EthereumRpcError","serialized","fast_safe_stringify_1","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","parse","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","getEthJsonRpcError","parseOpts","classes_1","utils_1","getEthProviderError","error_constants_1","server","custom","errors_1","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","hasKey","isJsonRpcServerError","isValidCode","assignOriginalError","fallbackError","shouldIncludeStack","_error","originalError","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_this3","_subscribe","_callee3","event","_x2","_unsubscribe","_callee4","_x3","_this4","listeners","_ref2","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","_createForOfIteratorHelper","allowArrayLike","it","_e","normalCompletion","didErr","step","_e2","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}