{"version":3,"file":"static/js/256.8a746468.chunk.js","mappings":"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,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIkR,EAAqCnR,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFxH,EAAAA,iBAA2B,SACzB0K,EACAvB,EACAqN,QAAA,QAAAA,GAAAA,GAEA,IAAMlI,EAAS/G,EAAOC,KACpBgP,EAAaiC,EAAmCC,GAIlD,OAFAhO,EAAW/B,KAAK2F,EAAQkI,EAAa,EAAI,GACzCrN,EAAUR,KAAK2F,EAAQkI,EAAa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","sources":["../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/util.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/utils.ts","../node_modules/crc-32/crc32.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/tweetnacl-util/nacl-util.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  5133: require('./5133.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['grayGlacier', require('./grayGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n",null,null,null,null,null,null,null,null,null,null,"(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, BN, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n",null,null,null,null,"/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","chain","name_1","name","chainId","toString","exports","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","hardforks","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","Array","isArray","map","e","param","undefined","_isSupportedHardfork","existing","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","hfChanges","hfEIPs","valueEIP","v","eipParams","activeHfs","activeHardforks","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","concat","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1","encrypt","publicKey","version","utils_1","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","nonce","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","privateKey","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","__exportStar","enumerable","get","concatSig","normalize","getPublicKeyFor","message","signature","messageHash","msgHash","sig","r","s","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","type","V3","V4","encodeData","lastIndexOf","parsedType","slice","typeValuePairs","item","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","add","hashStruct","sanitizeData","sanitizedData","key","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","call","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","input","buffer","toLowerCase","assert","ethjsUtil","secp256k1","addr","bytes_1","address","eip1191ChainId","stripHexPrefix","prefix","hash_1","ret","i","parseInt","toUpperCase","nonceBN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","right","buf","first","isBuffer","isHexString","padToEven","toArrayLike","toNumber","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","keccak224","keccak384","k256","keccak512","createHash","bits","update","digest","padded","rlp","encode","self","fields","raw","_fields","toJSON","label","obj_1","serialize","getter","setter","allowZero","allowLess","defineProperty","configurable","set","default","alias","decode","d","keys_1","indexOf","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","k","c","o","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","b","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","Math","floor","sel25519","q","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","f","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","verify","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","min","module","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","_context","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","_lookupAccounts","res","_context2","_lookupDefaultAccount","_context3","_sendTransaction","_context4","txParams","params","_signTransaction","_context5","_ethSign","_context6","extraParams","msgParams","_signTypedData","_context7","_signTypedDataV","_context8","_signTypedDataV2","_context9","_personalSign","_context10","firstParam","secondParam","warning","_encryptionPublicKey","_context11","_decryptMessage","_context12","_fetchPrivateKey","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_getPrivateKey","_","_processTransaction","sendTransaction","_processSignTransaction","signTransaction","_processEthSignMessage","signMessage","_processPersonalMessage","signPersonalMessage","_processTypedMessage","signTypedData","WalletConnectProvider","_inherits","config","state","_classCallCheck","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","_createClass","_enable","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_switchChain","addChain","_ref2$addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","_get","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","getProviderHandlers","ethMiddleware","engine","JRPCEngine","_createJsonRpcClient","providerFromEngine","updateProviderEngineProxy","on","_ref3","payload","_this2","_payload$params$","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","div","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_fetchEip1159GasEstimates","url","estimates","normalizedEstimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_typeof","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","errors","_data$domain","isNaN","signTx","_signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","common","unsignedEthTx","TransactionFactory","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","finalChainId","_processTypedMessageV","_processTypedMessageV2","_processEncryptionPublicKey","getEncryptionPublicKey","stripped","buff","bnToHex","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","_init","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_this$chainConfig","clonedTxParams","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gas","getDefaultGasLimit","defaultGasLimit","gasLimit","getDefaultGasFees","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","lt","_fetchEthGasPriceEstimate","_getEIP1559Compatibility","latestBlock","supportsEIP1559","baseFeePerGas","_fetchGasFeeEstimateData","isLegacyGasAPICompatible","replace","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","_yield$this$fetchGasF","_gasFeeEstimates$medi","_yield$this$fetchEthG","txMeta","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","muln","bufferedGasLimitBn","txParameters","to","txCategory","transactionCategory","determineTransactionCategory","_yield$this$determine","analyzeGasUsage","_yield$this$analyzeGa","addGasBuffer","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","_lookupNetwork","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","ticker","symbol","tickerName","blockExplorer","switchChain","_addNewChain","chainParams","_updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref2","_updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","_type","toBuffer","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","stringError","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","dataLength","ceil","initCodeCost","imuln","iadd","getSenderPublicKey","unpadBuffer","publicToAddress","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","getMessageToSign","ecsign","_processSignature","splice","isSupportedChainId","forCustomChain","values","cannotEqual","entries","bufferToHex","postfix","TRANSACTION_TYPE_BUFFER","accessList","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","eqn","checkMaxInitCodeSize","freeze","FeeMarketEIP1559Transaction","serialized","equals","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","baseFee","sub","bnToUnpaddedBuffer","hashMessage","keccak256","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","_validateTxV","chainIdDoubled","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","txType","_1","EIP","fromSerializedData","transactionID","_common","isAccessListBuffer","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","addressBuffer","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","EthereumRpcError","isInteger","stack","fast_safe_stringify_1","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","rpc","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","getEthJsonRpcError","arg","parseOpts","classes_1","getEthProviderError","error_constants_1","server","errors_1","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","hasKey","isJsonRpcServerError","isValidCode","assignOriginalError","obj","hasOwnProperty","fallbackError","shouldIncludeStack","_error","originalError","factory","CRC32","T0","table","signed_crc_table","TT","T","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","C","charCodeAt","B","DO_NOT_EXPORT_CRC","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","ctx","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","some","testType","list","id","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","_e","minProperties","maxProperties","every","additionalItems","contains","minimum","number","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","max","pow","round","testArrays","deepCompareStrict","multipleOf","divisibleBy","string","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","sum","makeSuffix","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","constructor","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","split","shift","decodeURIComponent","encodePath","decimalPlaces","decimalParts","val","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","integer","boolean","date","Date","any","root","util","validateBase64","unescape","fromCharCode","escape","atob","btoa"],"sourceRoot":""}